// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pharmacy.Infrastracture.DataContext;

#nullable disable

namespace Pharmacy.Infrastracture.Migrations
{
    [DbContext(typeof(PharmacyContext))]
    partial class PharmacyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Arabic_CI_AS")
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Pharmacy.Infrastracture.Models.CategoryDAO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("Pharmacy.Infrastracture.Models.CompanyDAO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Company", (string)null);
                });

            modelBuilder.Entity("Pharmacy.Infrastracture.Models.DiseaseDAO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Disease", (string)null);
                });

            modelBuilder.Entity("Pharmacy.Infrastracture.Models.DiseaseMedicineDAO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Disease")
                        .HasColumnType("int");

                    b.Property<int>("Medicine")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Disease");

                    b.HasIndex(new[] { "Medicine", "Disease" }, "IX_PersonMedicine")
                        .IsUnique();

                    b.ToTable("DiseaseMedicine", (string)null);
                });

            modelBuilder.Entity("Pharmacy.Infrastracture.Models.IngredientDAO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Ingredient", (string)null);
                });

            modelBuilder.Entity("Pharmacy.Infrastracture.Models.MedicienIngredientDAO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Ingredient")
                        .HasColumnType("int");

                    b.Property<int>("Medicine")
                        .HasColumnType("int");

                    b.Property<decimal>("Ratio")
                        .HasColumnType("numeric(10,7)");

                    b.HasKey("Id");

                    b.HasIndex("Ingredient");

                    b.HasIndex("Medicine");

                    b.ToTable("MedicienIngredient", (string)null);
                });

            modelBuilder.Entity("Pharmacy.Infrastracture.Models.MedicineDAO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<int>("Company")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Dosage")
                        .HasColumnType("numeric(18,5)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ScientificName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.HasIndex("Company");

                    b.ToTable("Medicine", (string)null);
                });

            modelBuilder.Entity("Pharmacy.Infrastracture.Models.PatientDAO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Patient", (string)null);
                });

            modelBuilder.Entity("Pharmacy.Infrastracture.Models.PatientDiseaseDAO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Disease")
                        .HasColumnType("int");

                    b.Property<int>("Patient")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Disease");

                    b.HasIndex("Patient");

                    b.ToTable("PatientDisease", (string)null);
                });

            modelBuilder.Entity("Pharmacy.Infrastracture.Models.DiseaseMedicineDAO", b =>
                {
                    b.HasOne("Pharmacy.Infrastracture.Models.DiseaseDAO", "DiseaseNavigation")
                        .WithMany("DiseaseMedicines")
                        .HasForeignKey("Disease")
                        .IsRequired()
                        .HasConstraintName("FK_DiseaseMedicine_Disease");

                    b.HasOne("Pharmacy.Infrastracture.Models.MedicineDAO", "MedicineNavigation")
                        .WithMany("DiseaseMedicines")
                        .HasForeignKey("Medicine")
                        .IsRequired()
                        .HasConstraintName("FK_DiseaseMedicine_Medicine");

                    b.Navigation("DiseaseNavigation");

                    b.Navigation("MedicineNavigation");
                });

            modelBuilder.Entity("Pharmacy.Infrastracture.Models.MedicienIngredientDAO", b =>
                {
                    b.HasOne("Pharmacy.Infrastracture.Models.IngredientDAO", "IngredientNavigation")
                        .WithMany("MedicienIngredients")
                        .HasForeignKey("Ingredient")
                        .IsRequired()
                        .HasConstraintName("FK_MedicienIngredient_Ingredient");

                    b.HasOne("Pharmacy.Infrastracture.Models.MedicineDAO", "MedicineNavigation")
                        .WithMany("MedicienIngredients")
                        .HasForeignKey("Medicine")
                        .IsRequired()
                        .HasConstraintName("FK_MedicienIngredient_Medicine");

                    b.Navigation("IngredientNavigation");

                    b.Navigation("MedicineNavigation");
                });

            modelBuilder.Entity("Pharmacy.Infrastracture.Models.MedicineDAO", b =>
                {
                    b.HasOne("Pharmacy.Infrastracture.Models.CategoryDAO", "CategoryNavigation")
                        .WithMany("Medicines")
                        .HasForeignKey("Category")
                        .IsRequired()
                        .HasConstraintName("FK_Medicine_Category");

                    b.HasOne("Pharmacy.Infrastracture.Models.CompanyDAO", "CompanyNavigation")
                        .WithMany("Medicines")
                        .HasForeignKey("Company")
                        .IsRequired()
                        .HasConstraintName("FK_Medicine_Company");

                    b.Navigation("CategoryNavigation");

                    b.Navigation("CompanyNavigation");
                });

            modelBuilder.Entity("Pharmacy.Infrastracture.Models.PatientDiseaseDAO", b =>
                {
                    b.HasOne("Pharmacy.Infrastracture.Models.DiseaseDAO", "DiseaseNavigation")
                        .WithMany("PatientDiseases")
                        .HasForeignKey("Disease")
                        .IsRequired()
                        .HasConstraintName("FK_PatientDisease_Disease");

                    b.HasOne("Pharmacy.Infrastracture.Models.PatientDAO", "PatientNavigation")
                        .WithMany("PatientDiseases")
                        .HasForeignKey("Patient")
                        .IsRequired()
                        .HasConstraintName("FK_PatientDisease_Patient");

                    b.Navigation("DiseaseNavigation");

                    b.Navigation("PatientNavigation");
                });

            modelBuilder.Entity("Pharmacy.Infrastracture.Models.CategoryDAO", b =>
                {
                    b.Navigation("Medicines");
                });

            modelBuilder.Entity("Pharmacy.Infrastracture.Models.CompanyDAO", b =>
                {
                    b.Navigation("Medicines");
                });

            modelBuilder.Entity("Pharmacy.Infrastracture.Models.DiseaseDAO", b =>
                {
                    b.Navigation("DiseaseMedicines");

                    b.Navigation("PatientDiseases");
                });

            modelBuilder.Entity("Pharmacy.Infrastracture.Models.IngredientDAO", b =>
                {
                    b.Navigation("MedicienIngredients");
                });

            modelBuilder.Entity("Pharmacy.Infrastracture.Models.MedicineDAO", b =>
                {
                    b.Navigation("DiseaseMedicines");

                    b.Navigation("MedicienIngredients");
                });

            modelBuilder.Entity("Pharmacy.Infrastracture.Models.PatientDAO", b =>
                {
                    b.Navigation("PatientDiseases");
                });
#pragma warning restore 612, 618
        }
    }
}
